//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiscordNewsBot.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DiscordNewsBot.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на :x: This channel is already in notification list :x: .
        /// </summary>
        internal static string add_channel_already_exist_text {
            get {
                return ResourceManager.GetString("add-channel-already-exist-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error durin adding channel! :x: .
        /// </summary>
        internal static string add_channel_exception_text {
            get {
                return ResourceManager.GetString("add-channel-exception-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Channel not found! :x: .
        /// </summary>
        internal static string add_channel_not_found_text {
            get {
                return ResourceManager.GetString("add-channel-not-found-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chennel added succesfully! :white_check_mark: .
        /// </summary>
        internal static string add_channel_success_text {
            get {
                return ResourceManager.GetString("add-channel-success-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current uptime: {0}.
        /// </summary>
        internal static string bot_uptime_text {
            get {
                return ResourceManager.GetString("bot-uptime-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have not yet added any channels to the notification list..
        /// </summary>
        internal static string channels_list_empty_text {
            get {
                return ResourceManager.GetString("channels-list-empty-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Deleted {0} messages. :white_check_mark: .
        /// </summary>
        internal static string deleted_messages_text {
            get {
                return ResourceManager.GetString("deleted-messages-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Force check new messages.
        /// </summary>
        internal static string force_check_text {
            get {
                return ResourceManager.GetString("force-check-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use this link to invete bot to your server.
        /// </summary>
        internal static string joinserver_link_text {
            get {
                return ResourceManager.GetString("joinserver-link-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bot invite link sent to user :x: .
        /// </summary>
        internal static string joinserver_link_to_user {
            get {
                return ResourceManager.GetString("joinserver-link-to-user", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language successfully changed to English :x: .
        /// </summary>
        internal static string lang_selected_text {
            get {
                return ResourceManager.GetString("lang-selected-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Notifications {0}.
        /// </summary>
        internal static string notifications_status_text {
            get {
                return ResourceManager.GetString("notifications-status-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Page {0}.
        /// </summary>
        internal static string page_text {
            get {
                return ResourceManager.GetString("page-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bot will shutdown in {0} min..
        /// </summary>
        internal static string shutdown_time_text {
            get {
                return ResourceManager.GetString("shutdown-time-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        internal static string statistics_text {
            get {
                return ResourceManager.GetString("statistics-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Channel successfully deleted :white_check_mark: .
        /// </summary>
        internal static string youtube_channel_deleted_text {
            get {
                return ResourceManager.GetString("youtube-channel-deleted-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Input number of channel whic you want to delete..
        /// </summary>
        internal static string youtube_delete_channel_select_text {
            get {
                return ResourceManager.GetString("youtube-delete-channel-select-text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  @here, New video on channel «{0}» https://www.youtube.com/watch?v={1}.
        /// </summary>
        internal static string youtube_notify_text {
            get {
                return ResourceManager.GetString("youtube-notify-text", resourceCulture);
            }
        }
    }
}
